


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 PRESERVE8
    3 00000000                 AREA             OS_CPU_A, CODE, READONLY
    4 00000000         ;*******************************************************
                       ********************
    5 00000000         ;        START MULTITASKING
    6 00000000         ;    void OSStartHighRdy(void)
    7 00000000         ;(1) ╫Шж╧жп╤огп╩╩╣╫╧эюМдёй╫,кЫспхннЯ╬Ы╧╓вВтз╧эюМдёй╫
    8 00000000         ;(2) ╣ВсцхннЯгп╩╩╧Ёвс╨╞йЩё╛╪╢ох╣ВсцOSTaskSwHook()╨╞йЩ
    9 00000000         ;(3) ╠Й╪гuCOS-IIдз╨кряфТ╤╞ткппё╛OSRunning = 1
   10 00000000         ;(4) ╩Я╣цвН╦ъсеох╪╤хннЯTCBё╛╣ц╣╫хннЯу╩ж╦уКё╛SPгп╩╩╣╫хннЯ
                       у╩
   11 00000000         ;(5) ЁЖу╩SPжп╣дхннЯу╩ё╛╟Эю╗хннЯв╢л╛╪д╢ФфВCPSRё╛R0-R12ё╛L
                       Rё╛╪лпЬж╢ппхннЯ║ё
   12 00000000         ;*******************************************************
                       ********************
   13 00000000 00000080 
                       I_Bit   EQU              0x80        ; IRQжп╤о╫Шж╧н╩
   14 00000000 00000040 
                       F_Bit   EQU              0x40        ; FIQжп╤о╫Шж╧н╩
   15 00000000 00000013 
                       Mode_SVC
                               EQU              0x13        ; ╧эюМдёй╫
   16 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1f        ; о╣мЁдёй╫
   17 00000000                 IMPORT           OSTaskSwHook
   18 00000000                 IMPORT           OSRunning
   19 00000000                 IMPORT           OSTCBHighRdy
   20 00000000                 EXPORT           OSStartHighRdy
   21 00000000         OSStartHighRdy
   22 00000000 E321F0D3        MSR              CPSR_c, #(I_Bit+F_Bit+Mode_SVC)
 
                                                            ; ╫Шж╧жп╤огп╩╩╣╫╧эю
                                                            Мдёй╫
   23 00000004         
   24 00000004 E59F0140        LDR              R0, =OSTaskSwHook ; ╣ВсцхннЯгп╩
                                                            ╩╧Ёвс╨╞йЩ
   25 00000008 E1A0E00F        MOV              LR, PC      ; в╪╠╦╨╞йЩ╥╣╩ь╣ьж╥
   26 0000000C E12FFF10        BX               R0          ; ж╖ЁжThumb║╒ARM╩Л╠
                                                            Ю
   27 00000010         
   28 00000010 E59F0138        LDR              R0, =OSRunning 
                                                            ;иХжцOSRunningн╙1
   29 00000014 E3A01001        MOV              R1, #1
   30 00000018 E5C01000        STRB             R1, [R0]
   31 0000001C         
   32 0000001C E59F0130        LDR              R0, =OSTCBHighRdy ; ╩Я╣цвН╦ъсео
                                                            х╪╤хннЯTCB
   33 00000020 E5900000        LDR              R0, [R0]    ; ╩Я╣цхннЯу╩ж╦уК
   34 00000024 E590D000        LDR              SP, [R0]    ; гп╩╩╣╫пбхннЯу╩
   35 00000028         
   36 00000028 E8BD0001        LDMFD            SP!, {R0}   ; ЁЖу╩пбхннЯ╣дCPSR
   37 0000002C E16FF000        MSR              SPSR_cxsf, R0
   38 00000030 E8FDDFFF        LDMFD            SP!, {R0-R12, LR, PC}^ ; ЁЖу╩пб
                                                            хннЯ╣диообнд
   39 00000034         
   40 00000034         ;*******************************************************
                       ******************************



ARM Macro Assembler    Page 2 


   41 00000034         ;    PERFORM A CONTEXT SWITCH (From task level) - OSCtxS
                       w()
   42 00000034         ;     PERFORM A CONTEXT SWITCH (From interrupt level) - 
                       OSIntCtxSw()
   43 00000034         ;             void OSCtxSw(void)   void OSIntCtxSw(void)
                       
   44 00000034         ;(1) ╠ё╢Ф╣╠г╟хннЯ╣диообнд(R0-R12ё╛LRё╛хннЯ╢Р╤о╣дPC╣ьж╥ё╛
                       в╢л╛╪д╢ФфВCPSR)╣╫╣╠г╟хннЯу╩жп
   45 00000034         ;(2) ╦Ы╬щ╣╠г╟хннЯTCB(хннЯ©ьжф©И)ё╛╩Я╣ц╣╠г╟хннЯу╩ж╦уКё╛╡╒
                       ╟я╣╠г╟хннЯSPу╩╠ё╢Ф╫Ьу╩ж╦уК
   46 00000034         ;(3) ╣ВсцхннЯгп╩╩╧Ёвс╨╞йЩё╛╪╢ох╣ВсцOSTaskSwHook()╨╞йЩ
   47 00000034         ;(4) ╟я╪╢╫╚ткпп╣двН╦ъсеох╪╤хннЯсеох╪╤╦Эпб╣╫╣╠г╟сеох╪╤╠Да
                       ©жп
   48 00000034         ;(5) ╟я╪╢╫╚ткпп╣двН╦ъсеох╪╤хннЯTCB(хннЯ©ьжф©И)╣ьж╥╦Эпб╣╫
                       ╣╠г╟TCB(хннЯ©ьжф©И)╣ьж╥╠Да©жп
   49 00000034         ;(6) ╩Я╣цвН╦ъсеох╪╤хннЯу╩ж╦уКё╛SPгп╩╩╣╫вН╦ъсеох╪╤хннЯу╩ё
                       ╛╡╒ЁЖу╩пбхннЯ╣диообндё╛ж╢пппбхннЯ  
   50 00000034         ;*******************************************************
                       *********************************
   51 00000034 00000020 
                       Mode_THUMB
                               EQU              0x20        ; THUMBдёй╫
   52 00000034                 IMPORT           OSTCBCur
   53 00000034                 IMPORT           OSTCBHighRdy
   54 00000034                 IMPORT           OSPrioCur
   55 00000034                 IMPORT           OSPrioHighRdy
   56 00000034         
   57 00000034                 EXPORT           OSCtxSw
   58 00000034                 EXPORT           OSIntCtxSw
   59 00000034         OSCtxSw
   60 00000034 E92D4000        STMFD            SP!, {LR}   ; я╧у╩╣╠г╟хннЯPC
   61 00000038 E92D4000        STMFD            SP!, {LR}   ; я╧у╩╣╠г╟хннЯLR
   62 0000003C E92D1FFF        STMFD            SP!, {R0-R12} ; я╧у╩╣╠г╟хннЯR0-
                                                            R12
   63 00000040 E10F0000        MRS              R0, CPSR    ; ╩Я╣ц╣╠г╟хннЯCPSR
   64 00000044 E31E0001        TST              LR, #1      ; ╡БйтхннЯйг╥Я╧╓вВт
                                                            зThumbдёй╫
   65 00000048 13800020        ORRNE            R0, R0, #Mode_THUMB ; йгThumbтР
                                                            в╢л╛╦дЁиThumbдёй╫
   66 0000004C E92D0001        STMFD            SP!, {R0}   ; я╧у╩CPSR
   67 00000050         
   68 00000050 E59F0100        LDR              R0, =OSTCBCur ; ╩Я╣ц╣╠г╟хннЯTCB
                                                            
   69 00000054 E5901000        LDR              R1, [R0]    ; сиTCB╩Я╣ц╣╠г╟хннЯ
                                                            у╩ж╦уК
   70 00000058 E581D000        STR              SP, [R1]    ; SPу╩╠ё╢Ф╫Ь╣╠г╟хнн
                                                            Яу╩ж╦уК
   71 0000005C         
   72 0000005C         OSIntCtxSw
   73 0000005C E59F00E8        LDR              R0, =OSTaskSwHook ; ╣ВсцхннЯгп╩
                                                            ╩╧Ёвс╨╞йЩ
   74 00000060 E1A0E00F        MOV              LR, PC      ; в╪╠╦╨╞йЩ╥╣╩ь╣ьж╥
   75 00000064 E12FFF10        BX               R0
   76 00000068         
   77 00000068 E59F00EC        LDR              R0, =OSPrioCur ; ╩Я╣ц╣╠г╟хннЯсе
                                                            ох╪╤╠ё╢Фж╦уК
   78 0000006C E59F10EC        LDR              R1, =OSPrioHighRdy ; ╩Я╣цвН╦ъсе
                                                            ох╪╤хннЯсеох╪╤╠ё╢Фж
                                                            ╦уК



ARM Macro Assembler    Page 3 


   79 00000070 E5D12000        LDRB             R2, [R1]    ; ╩Я╣цвН╦ъсеох╪╤хнн
                                                            Ясеох╪╤
   80 00000074 E5C02000        STRB             R2, [R0]    ; ╠ё╢Ф╫Ь╣╠г╟хннЯсео
                                                            х╪╤ж╦уК╠Да©жп
   81 00000078         
   82 00000078 E59F00D8        LDR              R0, =OSTCBCur ; ╩Я╣ц╣╠г╟хннЯTCB
                                                            ╠ё╢Фж╦уК
   83 0000007C E59F10D0        LDR              R1, =OSTCBHighRdy ; ╩Я╣цвН╦ъсео
                                                            х╪╤хннЯTCB╠ё╢Фж╦уК
   84 00000080 E5912000        LDR              R2, [R1]    ; вН╦ъсеох╪╤TCB╣ьж╥
                                                            ╠ё╢Ф╫Ь╣╠г╟хннЯTCBж╦
                                                            уК
   85 00000084 E5802000        STR              R2, [R0]
   86 00000088         
   87 00000088 E592D000        LDR              SP, [R2]    ; SPгп╩╩╣╫вН╦ъсеох╪
                                                            ╤хннЯу╩
   88 0000008C         
   89 0000008C E8BD0001        LDMFD            SP!, {R0}   ; ЁЖу╩пбхннЯ╣дCPSR
   90 00000090 E16FF000        MSR              SPSR_cxsf, R0
   91 00000094 E8FDDFFF        LDMFD            SP!, {R0-R12, LR, PC}^ ; ЁЖу╩пб
                                                            хннЯ╣диообнд
   92 00000098         
   93 00000098         ;*******************************************************
                       *******************************
   94 00000098         ;    CRITICAL SECTION FUNCTIONS
   95 00000098         ; аы╫ГгЬ╥цнй╢с╬ж╡©╠Да©╠ё╢Ф/╩ж╦╢жп╤ов╢л╛ты©╙╧ьжп╤о
   96 00000098         ;*******************************************************
                       *******************************
   97 00000098                 EXPORT           CPU_SR_Save
   98 00000098                 EXPORT           CPU_SR_Restore
   99 00000098         CPU_SR_Save
  100 00000098 E10F0000        MRS              R0, CPSR
  101 0000009C E38010C0        ORR              R1, R0, #0xC0 ; иХжцIRQ,FIQ╬Ы╫Ш
                                                            ж╧жп╤о
  102 000000A0 E121F001        MSR              CPSR_c, R1
  103 000000A4 E12FFF1E        BX               LR          ; ╫Шж╧жп╤о,╥╣╩ьжп╤о
                                                            в╢л╛╣╫R0жп
  104 000000A8         
  105 000000A8         CPU_SR_Restore
  106 000000A8 E121F000        MSR              CPSR_c, R0
  107 000000AC E12FFF1E        BX               LR
  108 000000B0         
  109 000000B0         
  110 000000B0                 EXPORT           System_call
  111 000000B0         System_call
  112 000000B0 EF00000C        SWI              12
  113 000000B4 E12FFF1E        BX               LR
  114 000000B8         
  115 000000B8                 IMPORT           SWI_Handler
  116 000000B8                 EXPORT           SWI_IRQ
  117 000000B8         SWI_IRQ
  118 000000B8 E92D5FFE        STMFD            SP!, {R1-R12,  LR}
  119 000000BC E51E4004        LDR              R4, [LR, #-4] ; LR - 4 н╙ж╦аН" 
                                                            swi xxx" ╣д╣ьж╥ё╛╣м
                                                            
  120 000000C0 E3C444FF        BIC              R4, R4, #0xFF000000 ; х║╣цARMж╦
                                                            аН24н╩а╒╪╢йЩ
  121 000000C4 E59F2098        LDR              R2, =SWI_Handler
  122 000000C8 E1A0E00F        MOV              LR, PC



ARM Macro Assembler    Page 4 


  123 000000CC E12FFF12        BX               R2
  124 000000D0 E0800004        ADD              R0, R0, R4
  125 000000D4 E8FD9FFE        LDMIA            SP!, {R1-R12, PC}^
  126 000000D8         
  127 000000D8         ;*******************************************************
                       *********************************
  128 000000D8         ;   IRQ╢╕юМ
  129 000000D8         ; фДкЭрЛЁё╬Ыс╕юЮпмй╠ппиообнд╠ё╢Ф╢╕юМ
  130 000000D8         ;(1) аый╠птй╧сц╣╫р╩п╘╪д╢ФфВё╛╤тсц╣╫╣д╪д╢ФфВя╧у╩╣╫IRQу╩ио
                       
  131 000000D8         ;(2) гп╩╩╣╫╧эюМдёй╫ё╛╫Шж╧жп╤оё╛хннЯткпптз╧эюМдёй╫ё╛уБ╡╫╫
                       ╚гп╩╩SP╣╫╠╩жп╤о╢Р╤о╣дхннЯу╩ио
  132 000000D8         ;(3) ╟я╠╩╢Р╤охннЯ╣диообндя╧хКхннЯ╣ду╩
  133 000000D8         ;(4) ╦Звыжп╤ог╤лв╪фйЩ,еп╤ойгхннЯ╠╩жп╤о╩╧йгжп╤ог╤лв,жп╤ог
                       ╤лв╡╩сц╦ЭпбхннЯу╩
  134 000000D8         ;(5) ╥гжп╤ог╤лв,╦Ы╬щ╣╠г╟хннЯTCB(хннЯ©ьжф©И)╩Я╣цу╩ж╦уКё╛╡
                       ╒╟я╢Р╤охннЯSPу╩╠ё╢Ф╫Ьу╩ж╦уК
  135 000000D8         ;(6) ╣ВсцOSIntEnter()╨╞йЩ╫Ьппжп╤ог╤лв╪с╪фйЩ
  136 000000D8         ;(7) гп╩╩╣╫о╣мЁдёй╫ё╛╡╒я╧у╩LRё╛уБ╡╫йгн╙акй╧сцо╣мЁдёй╫у╩ю
                       ╢╢╕юМжп╤о╨╞йЩё╛╪УгАхннЯу╩╣дй╧сц║ё
  137 000000D8         ;(8) ╣ВсцIRQ_Handler()╨╞йЩй╣жй╢╕юМIRQжп╤о╥ЧнЯё╛тзжп╤о╥Чн
                       Яжп©иты╢Р©╙IRQжп╤оё╛ж╖Ёжжп╤ог╤лв 
  138 000000D8         ;(9) жп╤о╥ЧнЯж╢ппмЙ╨Сё╛ЁЖу╩LRё╛╡╒гп╩╩╣╫╧эюМдёй╫ё╛╫Шж╧жп╤
                       оё╛╢кй╠SP╫╚гп╩╩╣╫╠╩╢Р╤охннЯ╣дхннЯу╩ио
  139 000000D8         ;(10) ╣ВсцOSIntExit()╨╞йЩ╫Ьппжп╤ог╤лв╪У╪фйЩё╛хГ╧Шжп╤ог╤л
                       в╪фйЩOSIntNestingн╙0ё╛тРк╣цВкЫспжп╤о
  140 000000D8         ;    мкЁЖё╛╫╚╣ВсцOSIntCtxSw()╫Ьппжп╤о╪╤хннЯгп╩╩ё╛╪лпЬж╢п
                       пхннЯ
  141 000000D8         ;(11) хГ╧Шжп╤ог╤лв╪фйЩOSIntNesting╡╩н╙0ё╛жп╤он╢х╚╡©мкЁЖё
                       ╛тРЁЖу╩иор╩╦Жжп╤о╣диообндё╛ж╢пп╠╩
  142 000000D8         ;     г╤лв╣диор╩╪╤жп╤о║ё
  143 000000D8         ;*******************************************************
                       **********************************
  144 000000D8                 IMPORT           OSIntEnter
  145 000000D8                 IMPORT           OSIntExit
  146 000000D8                 IMPORT           OSIntNesting
  147 000000D8                 IMPORT           IRQ_Handler
  148 000000D8         
  149 000000D8         
  150 000000D8                 IMPORT           is_system_ticks
  151 000000D8         
  152 000000D8         
  153 000000D8                 EXPORT           IRQ_SaveContext_os
  154 000000D8         IRQ_SaveContext_os
  155 000000D8 E24EE004        SUB              LR, LR, #4  ; IRQрЛЁё╥╣╩ь╣ьж╥LR
                                                            -4
  156 000000DC E92D0007        STMFD            SP!, {R0-R2} ; аый╠й╧сц╣д╧╓вВ╪д
                                                            ╢ФфВя╧хКIRQу╩
  157 000000E0 E14F0000        MRS              R0, SPSR    ; ╠ё╢ФрЛЁёЁЖожг╟╣дC
                                                            PSR
  158 000000E4 E1A0100E        MOV              R1, LR      ; ╠ё╢ФLR
  159 000000E8 E1A0200D        MOV              R2, SP      ; ╠ё╢ФIRQу╩ж╦уК,сцю
                                                            ╢ЁЖу╩╧╓вВ╪д╢ФфВ
  160 000000EC E28DD00C        ADD              SP, SP, #(3 * 4) ; ╩ж╦╢IRQу╩т╜ю
                                                            ╢╣дн╩жц
  161 000000F0         
  162 000000F0 E321F0D3        MSR              CPSR_c, #(I_Bit+F_Bit+Mode_SVC)
 
                                                            ; ╫Шж╧жп╤о║╒гп╩╩╣╫╧



ARM Macro Assembler    Page 5 


                                                            эюМдёй╫╠ё╢ФожЁ║
  163 000000F4         
  164 000000F4 E92D0002        STMFD            SP!, {R1}   ; я╧у╩╢Р╤охннЯ╣дPC
  165 000000F8 E92D4000        STMFD            SP!, {LR}   ; я╧у╩╢Р╤охннЯ╣дLR
  166 000000FC E92D1FF8        STMFD            SP!, {R3-R12} ; я╧у╩╢Р╤охннЯ╣дR
                                                            12-R3
  167 00000100 E8B200E0        LDMFD            R2!, {R5-R7} ; ╢сIRQу╩╩ж╦╢R2-R0
                                                            
  168 00000104 E92D00E0        STMFD            SP!, {R5-R7} ; я╧у╩╢Р╤охннЯ╣дR2
                                                            -R0
  169 00000108 E92D0001        STMFD            SP!, {R0}   ; я╧у╩╢Р╤охннЯ╣дCPS
                                                            R
  170 0000010C         
  171 0000010C         ;LDR  R0, =OSIntNesting           ; ╩Я╣цжп╤ог╤лв╪фйЩ
  172 0000010C         ;LDRB R1, [R0]
  173 0000010C         ;CMP  R1, #0                      ; еп╤охннЯ╠╩жп╤о╩╧йгжп
                       ╤ог╤лв
  174 0000010C         ;BNE  IntteruptNesting            ; жп╤ог╤лв╡╩сц╦ЭпбхннЯ
                       у╩ж╦уК
  175 0000010C         
  176 0000010C E59F0044        LDR              R0, =OSTCBCur ; хннЯ╠╩жп╤о╢Р╤о,
                                                            ╩Я╣ц╢Р╤охннЯTCB
  177 00000110 E5901000        LDR              R1, [R0]    ; ╩Я╣ц╠╩╢Р╤охннЯу╩ж
                                                            ╦уК
  178 00000114 E581D000        STR              SP, [R1]    ; SPу╩╠ё╢Ф╫Ь╢Р╤охнн
                                                            Яу╩ж╦уК
  179 00000118         
  180 00000118         ;IntteruptNesting 
  181 00000118         ;LDR  R0, =OSIntEnter             ; ╣ВсцOSIntEnter()╫Ьпп
                       жп╤ог╤лв╪фйЩ
  182 00000118         ;MOV  LR, PC
  183 00000118         ;BX  R0
  184 00000118         
  185 00000118         ;©╙й╪╢╕юМжп╤о
  186 00000118 E321F0DF        MSR              CPSR_c, #(I_Bit+F_Bit+Mode_SYS)
 
                                                            ; гп╩╩╣╫о╣мЁдёй╫,й╧
                                                            сцо╣мЁдёй╫у╩╢╕юМжп╤
                                                            о
  187 0000011C E92D4000        STMFD            SP!, {LR}   ; я╧у╩о╣мЁдёй╫LR
  188 00000120         
  189 00000120 E59F0040        LDR              R0, =IRQ_Handler 
                                                            ; ╣ВсцIRQ╢╕юМ╨╞йЩ
  190 00000124 E1A0E00F        MOV              LR, PC
  191 00000128 E12FFF10        BX               R0
  192 0000012C         
  193 0000012C E8BD4000        LDMFD            SP!, {LR}   ; ЁЖу╩о╣мЁдёй╫LR  
  194 00000130         
  195 00000130         
  196 00000130 E321F0D3        MSR              CPSR_c, #(I_Bit+F_Bit+Mode_SVC)
 
                                                            ; гп╩╩╣╫╧эюМдёй╫,й╧
                                                            сцхннЯу╩╫ЬппЁЖу╩ 
  197 00000134         
  198 00000134 E59F0030        LDR              R0, =is_system_ticks ; еп╤ойг╡╩
                                                            йго╣мЁпдлЬжп╤о
  199 00000138 E1A0E00F        MOV              LR, PC
  200 0000013C E12FFF10        BX               R0
  201 00000140         



ARM Macro Assembler    Page 6 


  202 00000140         IntReturn
  203 00000140 E8BD0001        LDMFD            SP!, {R0}   ; жп╤о╥╒иЗг╤лв,ЁЖу╩
                                                            иор╩╦Жжп╤о╣диообнд
  204 00000144 E16FF000        MSR              SPSR_cxsf, R0
  205 00000148 E8FDDFFF        LDMFD            SP!, {R0-R12, LR, PC}^
  206 0000014C         
  207 0000014C                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM926EJ-S --apcs=inter
work --depend=.\objects\os_cpu_a.d -o.\objects\os_cpu_a.o -IC:\Keil_v5\ARM\RV31
\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Samsung --predefine="_
_UVISION_VERSION SETA 523" --list=.\os_cpu_a.lst ..\uCOS-II\Ports\os_cpu_a.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CPU_SR_Restore 000000A8

Symbol: CPU_SR_Restore
   Definitions
      At line 105 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 98 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: CPU_SR_Restore used once
CPU_SR_Save 00000098

Symbol: CPU_SR_Save
   Definitions
      At line 99 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 97 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: CPU_SR_Save used once
IRQ_SaveContext_os 000000D8

Symbol: IRQ_SaveContext_os
   Definitions
      At line 154 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 153 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: IRQ_SaveContext_os used once
IntReturn 00000140

Symbol: IntReturn
   Definitions
      At line 202 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      None
Comment: IntReturn unused
OSCtxSw 00000034

Symbol: OSCtxSw
   Definitions
      At line 59 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 57 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: OSCtxSw used once
OSIntCtxSw 0000005C

Symbol: OSIntCtxSw
   Definitions
      At line 72 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 58 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: OSIntCtxSw used once
OSStartHighRdy 00000000

Symbol: OSStartHighRdy
   Definitions
      At line 21 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 20 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: OSStartHighRdy used once
OS_CPU_A 00000000

Symbol: OS_CPU_A



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 3 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      None
Comment: OS_CPU_A unused
SWI_IRQ 000000B8

Symbol: SWI_IRQ
   Definitions
      At line 117 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 116 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: SWI_IRQ used once
System_call 000000B0

Symbol: System_call
   Definitions
      At line 111 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 110 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: System_call used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 14 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 22 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 162 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 186 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 196 in file ..\uCOS-II\Ports\os_cpu_a.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 13 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 22 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 162 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 186 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 196 in file ..\uCOS-II\Ports\os_cpu_a.s

Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 15 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 22 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 162 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 196 in file ..\uCOS-II\Ports\os_cpu_a.s

Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 16 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 186 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: Mode_SYS used once
Mode_THUMB 00000020

Symbol: Mode_THUMB
   Definitions
      At line 51 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 65 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: Mode_THUMB used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

IRQ_Handler 00000000

Symbol: IRQ_Handler
   Definitions
      At line 147 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 189 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: IRQ_Handler used once
OSIntEnter 00000000

Symbol: OSIntEnter
   Definitions
      At line 144 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      None
Comment: OSIntEnter unused
OSIntExit 00000000

Symbol: OSIntExit
   Definitions
      At line 145 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      None
Comment: OSIntExit unused
OSIntNesting 00000000

Symbol: OSIntNesting
   Definitions
      At line 146 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      None
Comment: OSIntNesting unused
OSPrioCur 00000000

Symbol: OSPrioCur
   Definitions
      At line 54 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 77 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: OSPrioCur used once
OSPrioHighRdy 00000000

Symbol: OSPrioHighRdy
   Definitions
      At line 55 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 78 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: OSPrioHighRdy used once
OSRunning 00000000

Symbol: OSRunning
   Definitions
      At line 18 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 28 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: OSRunning used once
OSTCBCur 00000000

Symbol: OSTCBCur



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 52 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 68 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 82 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 176 in file ..\uCOS-II\Ports\os_cpu_a.s

OSTCBHighRdy 00000000

Symbol: OSTCBHighRdy
   Definitions
      At line 19 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 53 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 32 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 83 in file ..\uCOS-II\Ports\os_cpu_a.s
Warning: OSTCBHighRdy multiply defined
OSTaskSwHook 00000000

Symbol: OSTaskSwHook
   Definitions
      At line 17 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 24 in file ..\uCOS-II\Ports\os_cpu_a.s
      At line 73 in file ..\uCOS-II\Ports\os_cpu_a.s

SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 115 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 121 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: SWI_Handler used once
is_system_ticks 00000000

Symbol: is_system_ticks
   Definitions
      At line 150 in file ..\uCOS-II\Ports\os_cpu_a.s
   Uses
      At line 198 in file ..\uCOS-II\Ports\os_cpu_a.s
Comment: is_system_ticks used once
12 symbols
360 symbols in table
